# –±–∞–∑–∞
import disnake
from disnake.ext import commands, tasks
from simpledemotivators import Demotivator
from config import token, mongotok
from pymongo import MongoClient
from discord.utils import get

# –≤—Å—è–∫–æ–µ —Ä–∞–∑–Ω–æ–µ
from math import ceil
import random
import asyncio
import requests
import pytz
import datetime

# –¥–ª—è –∞–Ω–µ–∫–¥–æ—Ç–æ–≤
from bs4 import BeautifulSoup
from googletrans import Translator

# –¥–ª—è –µ–±—É—á–∏—Ö —Ä–µ–¥–∏—Å–æ–≤
import json
import urllib.request
import urllib.parse

client = commands.Bot(command_prefix=commands.when_mentioned_or('?'), intents=disnake.Intents.all())
converter = commands.MemberConverter()

# –º–æ–Ω–≥–æ–¥–±
cluster = MongoClient(mongotok)
deml = cluster["GMDOBOT"]["demonlist"]
plrs = cluster["GMDOBOT"]["players"]
mmbrs = cluster["GMDOBOT"]["members"]
brthds = cluster["GMDOBOT"]["birthdays"]
wkds = cluster["GMDOBOT"]["weekdays"]
pcks = cluster["GMDOBOT"]["demonpacks"]

editor = 927634802096611469
gmdoguild = None
translator = Translator(service_urls=['translate.googleapis.com'])
API_KEY = 'AIzaSyCiet7DWMafTzv-hTelx6pd1JUV_cTQOZE'
SEARCH_ENGINE_ID = '9f1f6320d8ce8bef8'

points = [250, 228, 210, 194, 180, 169, 159, 150, 143, 137, 132, 127.5, 123.6, 120, 117.4, 114, 112.6, 111, 109, 108, 106,
	 105.5, 104, 102.8, 101, 100.1, 98, 97, 96.3, 95, 93.8, 92.5, 91, 90, 88.9, 86.7, 84, 82.5, 80, 78.6, 76.7, 74, 73,
	 71.5, 69.9, 68, 66, 65.4, 64, 62.65, 61, 60, 58.8, 57, 56.5, 55.2, 53.9, 52, 51, 50.1, 48, 47, 46, 45.5, 44,
	 43.4, 42, 41.5, 40.54, 39, 38.7, 37.8, 34, 36.16, 35.3, 34, 33.8, 33.06, 32, 31, 30.9, 30.2, 29.6, 29, 28.3, 27.82,
	 27, 26.6, 26.09, 25.5, 25, 24.5, 24, 23.55, 23, 22.6, 22.1, 21.7, 21.3, 20.9, 20.5, 20, 19.78, 19.4, 19, 18.7,
	 18.38, 18, 17.7, 17.42, 17.1, 16.83, 16.5, 16.2, 16, 15.74, 15.5, 15.2, 15, 14.7, 14.52, 14.3, 14, 13.87, 13.6,
	 13.47, 13.2, 13, 12.9, 12.72]


async def browse_pages(ctx, pg, pages, embeds, more_buttons=True):
	msg = await ctx.edit_original_message(embed=embeds[pg - 1])

	if pages > 1:
		reactionslist = ["‚è™", "‚óÄ", "‚ñ∂", "‚è©"] if more_buttons else ["‚óÄ", "‚ñ∂"]
		for i in reactionslist:
			await msg.add_reaction(i)

		while True:
			try:
				reaction, user = await client.wait_for('reaction_add', timeout=60.0,
													   check=lambda reaction, user: user == ctx.author and str(
														   reaction.emoji) in reactionslist)
			except asyncio.TimeoutError:
				await msg.clear_reactions()
				break
			else:

				if str(reaction.emoji) == (reactionslist[1] if more_buttons else reactionslist[0]):
					if pg != 1:
						pg -= 1
				elif str(reaction.emoji) == (reactionslist[2] if more_buttons else reactionslist[1]):
					if pg != pages:
						pg += 1

				if more_buttons:
					if str(reaction.emoji) == reactionslist[3]:
						pg = pages
					elif str(reaction.emoji) == reactionslist[0]:
						pg = 1
				await msg.remove_reaction(str(reaction.emoji), ctx.author)
				await ctx.edit_original_message(embed=embeds[pg - 1])


def get_passed_levels(player):
	passedlevels = []
	for lvl in deml.find():
		for victor in lvl["victors"]:
			if victor[0].lower() == player.lower():
				lvl["proof"] = victor[1]
				passedlevels.append(lvl)
				break
	passedlevels.sort(key=lambda x: x['position'])
	return passedlevels

def calc_lb():
	victors = {}
	for lvl in deml.find():
		for victor in lvl["victors"]:
			if victor[0] not in victors.keys():
				victors[victor[0]] = [points[lvl["position"] - 1] if lvl["position"] <= 100 else 3, 0]
			else:
				victors[victor[0]][0] += points[lvl["position"] - 1] if lvl["position"] <= 100 else 3

	for victor in victors:
		if victors[victor][0] >= 9:
			for item in pcks.find():
				passedlevels = [i["name"] for i in get_passed_levels(victor)]
				if len(item["levels"]) == len(list(filter(lambda i: i in passedlevels, item["levels"]))):
					victors[victor][1] += 1
					victors[victor][0] += item["points"]
	return {k: v for k, v in sorted(victors.items(), reverse=True, key=lambda item: item[1])}

def randimg(search):
	q = urllib.parse.quote_plus(search, safe='?&=')

	request = urllib.request.Request(
		'https://www.googleapis.com/customsearch/v1?key=' + API_KEY + '&cx=' +
		SEARCH_ENGINE_ID + '&q=' + q + '&start=' + str(
			random.choice([i * 10 + 1 for i in range(20)])) + '&searchType=image')

	with urllib.request.urlopen(request) as f:
		data = f.read().decode('utf-8')

	return random.choice(json.loads(data)['items'])


def gk(d):
	return [i for i in d]


@client.event
async def on_ready():
	global gmdoguild
	checkday.start()
	gmdoguild = client.get_guild(886678201387073607)
	await client.change_presence(activity=disnake.Game(name="–ª—É—á—à–∏–π —Å–µ—Ä–≤–µ—Ä!"))
	print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")


@client.event
async def on_message(message):
	gmobot = get(client.get_all_members(), id=993896677092106240)
	emojis = {e.name: str(e) for e in gmdoguild.emojis}
	if gmobot.mention in message.content:
		await message.channel.send(emojis["VK_WTF"])
	if message.channel.id == 997728986807406652 and message.author.id != 993896677092106240:
		if len(message.content) == 5 and message.content[2] == ".":
			if brthds.find_one({"member": message.author.id}) is None:
				brthds.insert_one(
					{"member": message.author.id, "day": int(message.content[:2]), "month": int(message.content[3:]),
					 "pozdravlen": False})
			else:
				brthds.update_one({"member": message.author.id},
								  {"$set": {"day": int(message.content[:2]), "month": int(message.content[3:])}})
			await message.add_reaction("‚úÖ")
		else:
			msg = await message.channel.send("—á–æ")
			await asyncio.sleep(3)
			await message.delete()
			await msg.delete()
	print(message.content)
	await client.process_commands(message)


@tasks.loop(seconds=60)
async def checkday():
	moscow_time = datetime.datetime.now(pytz.timezone('Europe/Moscow'))
	birthchannel = client.get_channel(886678288704090193)
	chat = client.get_channel(886680631239663707)
	imeninnikrole = get(gmdoguild.roles, id=1001748951529164810)

	if moscow_time.hour >= 7:
		for birth in brthds.find():
			imenin = await client.fetch_user(birth["member"])
			imeninnik = gmdoguild.get_member(imenin.id)
			if birth["day"] == moscow_time.day and birth["month"] == moscow_time.month:
				if not birth["pozdravlen"]:
					parse = "https://pozdraff.ru/pozdravleniya/5?for=man&count=2"
					headers = {
						"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36 OPR/68.0.3618.206 (Edition Yx GX)"}

					page = requests.get(parse, headers=headers)
					soup = BeautifulSoup(page.content, "html.parser")
					pozdravlenie = soup.find("p", "lead greeting").get_text("\n", strip=True)

					embed = disnake.Embed(colour=0xfff94a)
					embed.set_image(randimg("–æ—Ç–∫—Ä—ã—Ç–∫–∏ —Å –¥–Ω—ë–º —Ä–æ–∂–¥–µ–Ω–∏—è –∑–∞–±–∞–≤–Ω—ã–µ")["link"])

					await birthchannel.send(f"–£ {imenin.mention} —Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è! –ü–û–ó–î–†–ê–í–õ–Ø–ï–ú! üéâüéä\n{pozdravlenie}", embed=embed)
					await imeninnik.add_roles(imeninnikrole)
					brthds.update_one({"member": imenin.id}, {"$set": {"pozdravlen": True}})
			else:
				brthds.update_one({"member": imenin.id}, {"$set": {"pozdravlen": False}})
				await imeninnik.remove_roles(imeninnikrole)

	if moscow_time.weekday() == 4:
		if not wkds.find_one({"pisya": True})["friday"]:
			await chat.send("–£–†–ê!!!!! –ü–Ø–¢–ù–ò–¶–ê!!!!!")
			await chat.send(randimg("–ø—è—Ç–Ω–∏—Ü–∞ –æ—Ç–∫—Ä—ã—Ç–∫–∏")["link"])
			wkds.update_one({"pisya": True}, {"$set": {"friday": True}})
	else:
		wkds.update_one({"pisya": True}, {"$set": {"friday": False}})


@client.slash_command(name='–¥–ª',
					  description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 100 —Å–ª–æ–∂–Ω–µ–π—à–∏—Ö –¥–µ–º–æ–Ω–æ–≤, –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –≤ –ü–æ–¥–ø–æ–ª—å–µ.',
					  options=[disnake.Option("—Å—Ç—Ä–∞–Ω–∏—Ü–∞", description="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã", required=False,
											  type=disnake.OptionType.integer)])
async def –¥–ª(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: int = 1):
	await inter.response.defer()
	emojis = {e.name: str(e) for e in gmdoguild.emojis}
	if random.randint(1, 10) == 1:
		await inter.edit_original_message(content="–•–£–ô –¢–ï–ë–ï –ê –ù–ï –î–ï–ú–û–ù–õ–ò–°–¢")
	else:
		lvlsamount = len([lvl for lvl in deml.find()])
		pages = ceil(lvlsamount / 10) if lvlsamount <= 120 else 12
		if —Å—Ç—Ä–∞–Ω–∏—Ü–∞ <= pages:
			embeds = list()
			for page in range(1, pages + 1 if lvlsamount <= 120 else 13):
				embed = disnake.Embed(title="–û—Ñ–∏—Ü–∞–ª—å–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ü–æ–¥–ø–æ–ª—å—è", colour=0x766ce5,
									  description="**–ú–µ—Å—Ç–æ | –ù–∞–∑–≤–∞–Ω–∏–µ | –ê–≤—Ç–æ—Ä | –ü–æ–∏–Ω—Ç—ã**")
				for i in range(10 * (page - 1) + 1, (page * 10 if lvlsamount > 10 and (
						lvlsamount - (page - 1) * 10) >= 10 else lvlsamount) + 1):
					lvl = deml.find_one({"position": i})
					embed.add_field(
						name=f"""**#{i}** | **{lvl["name"]}** by **{lvl["author"]}** | {points[i - 1]}{emojis['GD_STAR']}\n""",
						value=f"Victors: {', '.join([f'**[{vic[0]}]({vic[1]})**' if vic[1] != None else vic[0] for vic in lvl['victors']]) if len(lvl['victors']) != 0 else '–Ω–µ—Ç'}",
						inline=False)
				embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{pages}. (C) Official Podpol'e Demonlist")
				embeds.append(embed)

			await browse_pages(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞, pages, embeds)
		else:
			await inter.edit_original_message(content="–ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—â—ë –Ω–µ—Ç —É—Ä–æ–≤–Ω–µ–π ‚ùå")


@client.slash_command(name='–ª–µ–≥–∞—Å–∏',
					  description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —É—Ä–æ–≤–Ω–µ–π, –≤—ã–ª–µ—Ç–µ–≤—à–∏—Ö –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–æ–ø–∞ 100 (—Å—é–¥–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –±–æ–ª—å—à–µ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è).',
					  options=[disnake.Option("—Å—Ç—Ä–∞–Ω–∏—Ü–∞", description="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã", required=False,
											  type=disnake.OptionType.integer)])
async def –ª–µ–≥–∞—Å–∏(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: int = 1):
	await inter.response.defer()
	emojis = {e.name: str(e) for e in gmdoguild.emojis}
	lvlsamount = len([lvl for lvl in deml.find()])
	if lvlsamount > 100:
		pages = ceil((lvlsamount - 120) / 10)
		if —Å—Ç—Ä–∞–Ω–∏—Ü–∞ <= pages:
			embeds = list()
			for page in range(13, pages + 13):
				embed = disnake.Embed(title="–û—Ñ–∏—Ü–∞–ª—å–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ü–æ–¥–ø–æ–ª—å—è", colour=0x766ce5,
									  description=f"*–ó–∞ –∫–∞–∂–¥—ã–π —É—Ä–æ–≤–µ–Ω—å –∏–∑ –ª–µ–≥–∞—Å–∏ –¥–∞—ë—Ç—Å—è 3*{emojis['GD_STAR']}\n**–ú–µ—Å—Ç–æ | –ù–∞–∑–≤–∞–Ω–∏–µ | –ê–≤—Ç–æ—Ä**")
				for i in range(10 * (page - 1) + 1, (page * 10 if lvlsamount > 10 and (
						lvlsamount - (page - 1) * 10) >= 10 else lvlsamount) + 1):
					lvl = deml.find_one({"position": i})
					embed.add_field(name=f"""**#{i}** | **{lvl["name"]}** by **{lvl["author"]}**\n""",
									value=f"Victors: {', '.join([f'**[{vic[0]}]({vic[1]})**' if vic[1] != None else vic[0] for vic in lvl['victors']]) if len(lvl['victors']) != 0 else '–Ω–µ—Ç'}",
									inline=False)
				embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page - 12}/{pages}. (C) Official Podpol'e Demonlist")
				embeds.append(embed)

			await browse_pages(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞, pages, embeds)
		else:
			await inter.edit_original_message(content="–ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—â—ë –Ω–µ—Ç —É—Ä–æ–≤–Ω–µ–π ‚ùå")
	else:
		await inter.edit_original_message(content="–º—É–∂–∏–∫ –ª–µ–≥–∞—Å–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")


# –ì–û–¢–û–í–û
@client.command(aliases=['add', '–¥–æ–±–∞–≤–∏—Ç—å', '–¥–æ–±–∞–≤–∏—Ç—å—É—Ä–æ–≤–µ–Ω—å'])
@commands.has_role(editor)
async def addlevel(ctx, lvlname, lvlauthor, pos: int):
	lvlsamount = len([lvl for lvl in deml.find()])
	if pos <= lvlsamount + 1:
		for name in [i["name"] for i in deml.find() if i["position"] >= int(pos)]:
			deml.update_one({"name": name}, {"$inc": {"position": 1}})
		deml.insert_one({"name": lvlname, "author": lvlauthor, "victors": [], "position": int(pos)})
		if pos == 1:
			await ctx.send(
				f"{lvlname} –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ {pos} –ø–æ–∑–∏—Ü–∏—é, —Å–º–µ—Å—Ç–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º {deml.find_one({'position': pos + 1})['name']} –Ω–∞ –≤—Ç–æ—Ä—É—é —Å—Ç—Ä–æ—á–∫—É –ª–∏—Å—Ç–∞ ‚úÖ")
		elif pos == lvlsamount + 1:
			await ctx.send(
				f"{lvlname} –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ {pos} –ø–æ–∑–∏—Ü–∏—é, —Ç–æ –µ—Å—Ç—å –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω—é—é, –Ω–∏—á–µ–≥–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ –æ–±–æ–≥–Ω–∞–≤ –∏ –Ω–µ —Å–º–µ—Å—Ç–∏–≤ üòú")
		else:
			await ctx.send(
				f"{lvlname} –¥–æ–±–∞–≤–ª–µ–Ω –Ω–∞ {pos} –ø–æ–∑–∏—Ü–∏—é, –≤—ã—à–µ {deml.find_one({'position': pos + 1})['name']}, –Ω–æ –Ω–∏–∂–µ {deml.find_one({'position': pos - 1})['name']} ‚úÖ")
	else:
		await ctx.send(
			f'–ú—É–∂–∏–∫, —Ç—ã —á–µ–≥–æ? –í –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ –ø–æ–∫–∞ —á—Ç–æ –≤—Å–µ–≥–æ {lvlsamount} —É—Ä–æ–≤–Ω–µ–π, –∞ —Ç—ã —Å–æ–±—Ä–∞–ª—Å—è –Ω–∞ {pos} –º–µ—Å—Ç–æ —á—Ç–æ-—Ç–æ —Å—Ç–∞–≤–∏—Ç—å. –ü–æ–¥—É–º–∞–π –æ–± —ç—Ç–æ–º –Ω–∞ –¥–æ—Å—É–≥–µ ‚ùå')


# –ì–û–¢–û–í–û
@client.command(aliases=['del', 'remove', '—É–¥–∞–ª–∏—Ç—å—É—Ä–æ–≤–µ–Ω—å', '—É–¥–∞–ª–∏—Ç—å'])
@commands.has_role(editor)
async def dellevel(ctx, pos: int):
	lvl = deml.find_one({"position": pos})
	if lvl is not None:
		deml.delete_one({"position": pos})
		for name in [i["name"] for i in deml.find() if i["position"] > pos]:
			deml.update_one({"name": name}, {"$inc": {"position": -1}})
		await ctx.send(f"{lvl['name']} —É–¥–∞–ª—ë–Ω. GG ‚úÖ")
	else:
		await ctx.send('–¢–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ùå')

# –ì–û–¢–û–í–û
@client.command(aliases=['furry'])
async def —Ñ—É—Ä—Ä–∏(ctx):
	await ctx.send(file=disnake.File('vjlink.gif'))

# –ì–û–¢–û–í–û
@client.command(aliases=['victor', '–≤–∏–∫—Ç–æ—Ä', '–¥–æ–±–∞–≤–∏—Ç—å–≤–∏–∫—Ç–æ—Ä–∞'])
@commands.has_role(editor)
async def addvictor(ctx, pos: int, victor, video=None):
	lvl = deml.find_one({"position": pos})
	if lvl is not None:
		victors = lvl["victors"]
		if victor.lower() not in [i[0].lower() for i in victors]:
			victors.append([victor, video])
			deml.update_one({"position": pos}, {"$set": {"victors": victors}})
			if plrs.find_one({"nick": victor}) is None:
				plrs.insert_one({"nick": victor, "discordtag": None})
			await ctx.send(f"{victor} –¥–æ–±–∞–≤–ª–µ–Ω –∫ –≤–∏–∫—Ç–æ—Ä–∞–º {lvl['name']} ‚úÖ")
		else:
			await ctx.send(f"{victor} —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∏–∫—Ç–æ—Ä–æ–º —É—Ä–æ–≤–Ω—è {lvl['name']} ‚ùå")
	else:
		await ctx.send('–¢–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ùå')


# –ì–û–¢–û–í–û
@client.command()
@commands.has_role(editor)
async def delvictor(ctx, pos: int, vctr):
	lvl = deml.find_one({"position": pos})
	if lvl is not None:
		victors = lvl["victors"]
		realname = None
		a = -1
		for victor in victors:
			a += 1
			if victor[0].lower() == vctr.lower():
				realname = victor[0]
				victors.pop(a)
				deml.update_one({"position": lvl["position"]}, {"$set": {"victors": victors}})
				break

		await ctx.send(f"{realname} —É–¥–∞–ª—ë–Ω –∏–∑ –≤–∏–∫—Ç–æ—Ä–æ–≤ {lvl['name']} ‚úÖ")

		a = 0
		for l in deml.find():
			for victor in l["victors"]:
				if victor[0].lower() == vctr.lower():
					a += 1
					break
		if a == 0:
			plrs.delete_one({"nick": realname})
	else:
		await ctx.send('–¢–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ùå')


# –ì–û–¢–û–í–û
@client.command(aliases=['proof', '–ø—Ä—É—Ñ', '–¥–æ–±–∞–≤–∏—Ç—å–ø—Ä—É—Ñ'])
@commands.has_role(editor)
async def addproof(ctx, pos: int, victor, video):
	lvl = deml.find_one({"position": pos})
	if lvl is not None:
		victors = lvl["victors"]
		vict = [vic for vic in victors if vic[0].lower() == victor.lower()]
		if len(vict) > 0:
			vict = vict[0]
			victors.pop(victors.index(vict))
			victors.append([victor, video])
			deml.update_one({"position": pos}, {"$set": {"victors": victors}})
			await ctx.send(f"–ü—Ä—É—Ñ –∏–≥—Ä–æ–∫–∞ {vict[0]} –Ω–∞ —É—Ä–æ–≤–µ–Ω—å {lvl['name']} —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω ‚úÖ")
		else:
			await ctx.send('–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∏–∫—Ç–æ—Ä–æ–º —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è ‚ùå')
	else:
		await ctx.send('–¢–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ùå')


# –ì–û–¢–û–í–û
@client.command(aliases=['—É–¥–∞–ª–∏—Ç—å–ø—Ä—É—Ñ'])
@commands.has_role(editor)
async def delproof(ctx, pos: int, victor):
	lvl = deml.find_one({"position": pos})
	if lvl is not None:
		victors = lvl["victors"]
		vict = [vic for vic in victors if vic[0].lower() == victor.lower()]
		if len(vict) > 0:
			vict = vict[0]
			if vict[1] is not None:
				victors.pop(victors.index(vict))
				victors.append([victor, None])
				deml.update_one({"position": pos}, {"$set": {"victors": victors}})
				await ctx.send(f"–ü—Ä—É—Ñ –∏–≥—Ä–æ–∫–∞ {vict[0]} –Ω–∞ —É—Ä–æ–≤–µ–Ω—å {lvl['name']} —É–¥–∞–ª—ë–Ω ‚úÖ")
			else:
				await ctx.send('–£ —ç—Ç–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏—Ç–∞–∫ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω—ã –Ω–∏–∫–∞–∫–∏–µ –ø—Ä—É—Ñ—ã –∫ —ç—Ç–æ–º—É —É—Ä–æ–≤–Ω—é ‚ùå')
		else:
			await ctx.send('–î–∞–Ω–Ω—ã–π –∏–≥—Ä–æ–∫ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∏–∫—Ç–æ—Ä–æ–º —ç—Ç–æ–≥–æ —É—Ä–æ–≤–Ω—è ‚ùå')
	else:
		await ctx.send('–¢–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ùå')


# –ì–û–¢–û–í–û
@client.command(aliases=['–∏–∑–º–µ–Ω–∏—Ç—å', '–∏–∑–º–µ–Ω–∏—Ç—å—É—Ä–æ–≤–µ–Ω—å'])
@commands.has_role(editor)
async def edit(ctx, pos: int, new_pos: int):
	lvl = deml.find_one({"position": pos})
	swapped_lvl = deml.find_one({"position": new_pos})
	if lvl is not None:
		if pos != new_pos:

			if pos > new_pos:
				for name in [i["name"] for i in deml.find() if i["position"] < pos and i["position"] >= new_pos]:
					deml.update_one({"name": name}, {"$inc": {"position": 1}})
			else:
				for name in [i["name"] for i in deml.find() if i["position"] > pos and i["position"] <= new_pos]:
					deml.update_one({"name": name}, {"$inc": {"position": -1}})
			deml.update_one({"name": lvl["name"]}, {"$set": {"position": new_pos}})
			await ctx.send(f'–£—Ä–æ–≤–µ–Ω—å {lvl["name"]} –ø–µ—Ä–µ–Ω–µ—Å—ë–Ω –Ω–∞ –ø–æ–∑–∏—Ü–∏—é {new_pos} —Å –ø–æ–∑–∏—Ü–∏–∏ {pos} ‚úÖ')
		else:
			await ctx.send('—á–æ —Ç–≤–æ—Ä–∏—à—å')
	else:
		await ctx.send('–¢–∞–∫–æ–≥–æ —É—Ä–æ–≤–Ω—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚ùå')


# –ì–û–¢–û–í–û
@client.command(aliases=['–¥–ª–±–∞–Ω'])
@commands.has_role(editor)
async def dlban(ctx, player):
	isplayerexists = False
	realname = None
	for lvl in deml.find():
		victors = lvl["victors"]
		a = -1
		for victor in victors:
			a += 1
			if victor[0].lower() == player.lower():
				isplayerexists = True
				realname = victor[0]
				victors.pop(a)
				deml.update_one({"position": lvl["position"]}, {"$set": {"victors": victors}})
				if len(deml.find_one({"position": lvl["position"]})["victors"]) == 0:
					deml.delete_one({"position": lvl["position"]})
					for name in [i["name"] for i in deml.find() if i["position"] > lvl["position"]]:
						deml.update_one({"name": name}, {"$inc": {"position": -1}})
				break
	if isplayerexists:
		plrs.delete_one({"nick": realname})
		await ctx.send(f'{realname} –±—ã–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–Ω–∏—á—Ç–æ–∂–µ–Ω –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ ‚úÖ')
	else:
		await ctx.send('–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ ‚ùå')


@client.command(aliases=['–ø—Ä–∏–≤—è–∑–∞—Ç—å'])
@commands.has_role(editor)
async def connect(ctx, player, member: disnake.Member):
	realname = [plr["nick"] for plr in plrs.find() if plr["nick"].lower() == player.lower()]

	if len(realname) > 0:
		realname = realname[0]
		if len([i for i in plrs.find({"nick": realname})]) == 1:
			plrs.update_one({"nick": realname}, {"$set": {"discordtag": member.id}})
			await ctx.send(f"{member.display_name} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —Å–≤–æ–µ–º—É –ø—Ä–æ—Ñ–∏–ª—é –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ ‚úÖ")
		else:
			await ctx.send(f"{member.display_name} —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥–µ–º–æ–º–Ω–ª–∏—Å—Ç—É ‚ùå")
	else:
		await ctx.send("–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ ‚ùå")


@client.command(aliases=['–æ—Ç–≤—è–∑–∞—Ç—å'])
@commands.has_role(editor)
async def disconnect(ctx, member: disnake.Member):
	player = plrs.find_one({"discordtag": member.id})
	if player != None:
		plrs.update_one({"nick": player["nick"]}, {"$set": {"discordtag": None}})
		await ctx.send(f"{member.display_name} —É—Å–ø–µ—à–Ω–æ –æ—Ç–≤—è–∑–∞–Ω –æ—Ç –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞ ‚úÖ")
	else:
		await ctx.send(f"–£—á–∞—Å—Ç–Ω–∏–∫ {member.display_name} –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥–µ–º–æ–Ω–ª–∏—Å—Ç—É ‚ùå")

@client.slash_command(name='–ø–∞–∫–∏',
					  description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–∫–æ–≤ —Å —É—Ä–æ–≤–Ω—è–º–∏ –∏–∑ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞',
					  options=[disnake.Option("—Å—Ç—Ä–∞–Ω–∏—Ü–∞", description="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã", required=False,
											  type=disnake.OptionType.integer)]
					  )
async def –ø–∞–∫–∏(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: int = 1):
	await inter.response.defer()
	emojis = {e.name: str(e) for e in gmdoguild.emojis}

	packs = [f"{emojis['VK_GRUST']} Temple –ü–∞–∫", f"{emojis['VK_KRUT']} OLD NC –ü–∞–∫", f"{emojis['VK_CLOWN']} CraZy –ü–∞–∫", f"{emojis['VK_glasses']} Sonic –ü–∞–∫", f"{emojis['VK_SHOCK']} SW –ü–∞–∫", f"{emojis['VK_XblX']} –§–∞–Ω–æ–≤—ã–π –ü–∞–∫", f"{emojis['VK_EDY']} –ü–∞–∫ —É—Ä–æ–≤–Ω–µ–π —Å –±—ã—Å—Ç—Ä—ã–º —Ç–µ–º–ø–æ–º", f"{emojis['VK_GAMER']} XL –ü–∞–∫", f"{emojis['Cube_Angara']} –ü–∞–∫ –ê–Ω–≥–∞—Ä–∞—Ä–∏–≤–µ—Ä–∞", f"{emojis['scary']} –ö–∞–Ω—Å–µ—Ä–Ω—ã–π –ü–∞–∫", f"üá∑üá∫ –†–ö –ü–∞–∫", f"{emojis['GD_DEMONSLAYER']} –•–µ–ª–ª –ü–∞–∫"]
	player = plrs.find_one({"discordtag": inter.author.id})
	embeds = list()
	pages = ceil(len(packs) / 9)

	if player != None:
		passedlevels=list()
		for j in range(len([q for q in pcks.find()])):
			item = pcks.find_one({"id": j})
			passedlevels.extend([i for i in item["levels"] if player["nick"] in [i[0] for i in deml.find_one({"name": i})["victors"]]])
	for page in range(1, pages + 1):
		if player != None:
			embed = disnake.Embed(title="–î–µ–º–æ–Ω-–ø–∞–∫–∏", description=f"–ü–æ–∫–∞ —á—Ç–æ –≤—ã –ø—Ä–æ—à–ª–∏ –≤—Å–µ–≥–æ **{translator.translate(f'{len(passedlevels)} levels', dest='ru').text if len(passedlevels) > 0 else '0 —É—Ä–æ–≤–Ω–µ–π'}** –∏–∑ –ø–∞–∫–æ–≤.\n`P.S.` ***–ù–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∂–∏—Ä–Ω—ã–º —à—Ä–∏—Ñ—Ç–æ–º*** - –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–π –≤–∞–º–∏ —É—Ä–æ–≤–µ–Ω—å.", colour=0x766ce5)
		else:
			embed = disnake.Embed(title="–î–µ–º–æ–Ω-–ø–∞–∫–∏", colour=0x766ce5)
		for j in range(9 * (page - 1), page * 9 if len(packs) > 9 and (len(packs) - (page - 1) * 9) >= 9 else len(packs)):
			item = pcks.find_one({"id": j})
			if player != None:
				passedlevels2 = [i for i in item["levels"] if player["nick"] in [i[0] for i in deml.find_one({"name": i})["victors"]]]
				embed.add_field(name=f"""{packs[item["id"]]}{' ‚úÖ' if len(passedlevels2) == len(item["levels"]) else ''}\n(+{item["points"]}{emojis['GD_STAR']} –∑–∞ 100%)""",
								value='–£—Ä–æ–≤–Ω–∏: ' + ", ".join([f"***{i}***" if i in passedlevels2 else i for i in item["levels"]]) + f"\n`–ü—Ä–æ–π–¥–µ–Ω–Ω–æ {round(len(passedlevels2)*100/len(item['levels']))}%/100%`", inline=True)
			else:
				embed.add_field(name=packs[item["id"]] + f'\n(+{item["points"]}{emojis["GD_STAR"]} –∑–∞ 100%)', value=", ".join(item["levels"]), inline=True)
		embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{pages}. (C) Official Podpol'e Demonlist")
		embeds.append(embed)

	await browse_pages(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞, pages, embeds)
	await inter.edit_original_message(embed=embed)

@client.slash_command(name='—É—Ä–æ–≤–µ–Ω—å',
					  description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–µ –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ.',
					  options=[disnake.Option("—É—Ä–æ–≤–µ–Ω—å",
											  description="–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–∞–∫ –∏ –ø–æ–∑–∏—Ü–∏—é —É—Ä–æ–≤–Ω—è, —Ç–∞–∫ –∏ –µ–≥–æ –Ω–∞–∑–≤–∞–Ω–∏–µ",
											  required=True, type=disnake.OptionType.string)])
async def —É—Ä–æ–≤–µ–Ω—å(inter, *, —É—Ä–æ–≤–µ–Ω—å=None):
	await inter.response.defer()
	emojis = {e.name: str(e) for e in gmdoguild.emojis}
	if —É—Ä–æ–≤–µ–Ω—å is not None:
		try:
			lvl = deml.find_one({"position": int(—É—Ä–æ–≤–µ–Ω—å)})
		except:
			lvlname = [lvl["name"] for lvl in deml.find() if lvl["name"].lower() == —É—Ä–æ–≤–µ–Ω—å.lower()]
			if len(lvlname) > 0:
				lvl = deml.find_one({"name": lvlname[0]})
			else:
				lvl = None

		if lvl is not None:
			print(lvl["position"])
			embed = disnake.Embed(title=lvl['name'] + f' ({points[lvl["position"] -1]}{emojis["GD_STAR"]})' if lvl["position"] <= 120 else lvl['name'] + f' (3 {emojis["GD_STAR"]})', colour=0x6ad96e)
			embed.add_field(name='üìë –ü–æ–∑–∏—Ü–∏—è:', value=f"**#{lvl['position']}**", inline=False)
			embed.add_field(name='üë®‚Äçüíª –ê–≤—Ç–æ—Ä:', value=f"**{lvl['author']}**", inline=False)
			embed.add_field(name=f'üë®‚Äçüë®‚Äçüë¶ –í–∏–∫—Ç–æ—Ä—ã ({len(lvl["victors"])}):',
							value=', '.join([f'**[{vic[0]}]({vic[1]})**' if vic[1] != None else f'**{vic[0]}**' for vic in lvl['victors']]) if len(lvl['victors']) != 0 else '–Ω–µ—Ç', inline=False)
			embed.set_footer(text="(C) Official Podpol'e Demonlist")
			await inter.edit_original_message(embed=embed)
		else:
			await inter.edit_original_message(content='(netu takova)')
	else:
		await inter.edit_original_message(content=f'—á–æ')


@client.slash_command(name='–ø—Ä–æ—Ñ–∏–ª—å',
					  description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–µ –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ.',
					  options=[disnake.Option("–∏–≥—Ä–æ–∫",
											  description="–ú–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∫–∞–∫ –∏ —Ç–µ–≥ –∏–≥—Ä–æ–∫–∞ –≤ –¥–∏—Å–∫–æ—Ä–¥–µ, —Ç–∞–∫ –∏ –µ–≥–æ –Ω–∏–∫ –≤ –ª–∏—Å—Ç–µ",
											  required=False)])
async def –ø—Ä–æ—Ñ–∏–ª—å(inter, –∏–≥—Ä–æ–∫: disnake.User = None):
	await inter.response.defer()
	emojis = {e.name: str(e) for e in gmdoguild.emojis}
	chzh = False
	if –∏–≥—Ä–æ–∫ == None:
		player = plrs.find_one({"discordtag": inter.author.id})
		if player is not None:
			player = player["nick"]
		else:
			player = None
			chzh = True
	else:
		# –≥–æ–≤–Ω–æ–∫–æ–¥ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –º–∞—Å—à—Ç–∞–±–æ–≤
		try:
			player = await converter.convert(inter, –∏–≥—Ä–æ–∫[3:-1])
		except:
			try:
				player = await converter.convert(inter, –∏–≥—Ä–æ–∫)
			except:
				player = –∏–≥—Ä–æ–∫
		if player != –∏–≥—Ä–æ–∫:
			player = plrs.find_one({"discordtag": player.id})
			if player is not None:
				player = player["nick"]

	if player is not None:
		passedlevels = get_passed_levels(player)

		if len(passedlevels) > 0:
			player = player.lower()
			leaderboard = calc_lb()
			leaderboardlower = {i.lower(): leaderboard[i] for i in leaderboard}

			main = 0
			legacy = 0
			passedlevelsf = list()
			for lvl in passedlevels:
				if lvl["position"] <= 50:
					passedlevelsf.append(f"**[{lvl['name']}]({lvl['proof']})**" if lvl['proof'] != None else f"**{lvl['name']}**")
					main += 1
				elif lvl["position"] <= 100:
					passedlevelsf.append(f"[{lvl['name']}]({lvl['proof']})" if lvl['proof'] != None else lvl['name'])
				else:
					passedlevelsf.append(f"*[{lvl['name']}]({lvl['proof']})*" if lvl['proof'] != None else f"*{lvl['name']}*")
					legacy += 1
			passedlevelsf = ", ".join(passedlevelsf)

			embed = disnake.Embed(title=f"–ü—Ä–æ—Ñ–∏–ª—å {gk(leaderboard)[gk(leaderboardlower).index(player)]} (**{round(leaderboardlower[player][0], 1)}**{emojis['GD_STAR']})",
								  colour=0x82e0da)
			embed.add_field(name='üìä –ú–µ—Å—Ç–æ –≤ —Ç–æ–ø–µ:', value=f"**#{gk(leaderboardlower).index(player) + 1}**",
							inline=True)
			embed.add_field(name='üßÆ –ü—Ä–æ–π–¥–µ–Ω–æ —É—Ä–æ–≤–Ω–µ–π:', value=f"**{len(passedlevels)}**", inline=True)
			embed.add_field(name='üìÅ –ü—Ä–æ–π–¥–µ–Ω–æ –ø–∞–∫–æ–≤:', value=f"**{leaderboardlower[player][1]}**", inline=True)
			embed.add_field(name='üü• Main:', value=f"**{main}**", inline=True)
			embed.add_field(name='üüß Extended:', value=f"**{len(passedlevels) - main - legacy}**", inline=True)
			embed.add_field(name='üü© Legacy:', value=f"**{legacy}**", inline=True)
			embed.add_field(name='üÉè –•–∞—Ä–¥–µ—Å—Ç:',
							value=f"**{passedlevels[0]['name']}** by **{passedlevels[0]['author']}**",
							inline=False)
			if len(passedlevelsf) < 999:
				embed.add_field(name='üìú –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏:', value=passedlevelsf, inline=False)
				embed.set_footer(text="(C) Official Podpol'e Demonlist")
			msg = await inter.edit_original_message(embed=embed)
			if len(passedlevelsf) >= 999:
				embed2 = disnake.Embed(title="üìú –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏:", description=passedlevelsf, colour=0x4ac4d4)
				embed2.set_footer(text="(C) Official Podpol'e Demonlist")
				await msg.channel.send(embed=embed2)
		else:
			if chzh:
				await inter.edit_original_message(content="–í–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ –¥–∏—Å–∫–æ—Ä–¥–µ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –ø—Ä–æ—Ñ–∏–ª—é –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ ‚ùå")
			else:
				await inter.edit_original_message(content="–¢–∞–∫–æ–≥–æ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –≤ —Ç–æ–ø–µ ‚ùå")
	else:
		await inter.edit_original_message(content="–≠—Ç–æ—Ç —É—á–∞—Å—Ç–Ω–∏–∫ –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥–µ–º–æ–Ω–ª–∏—Å—Ç—É ‚ùå")


@client.slash_command(name='—Å—Ç–∞—Ç–∞',
					  description='–ü–æ–∫–∞–∑—ã–≤–µ—Ç —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ü–æ–¥–ø–æ–ª—å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤.',
					  options=[disnake.Option("—Å—Ç—Ä–∞–Ω–∏—Ü–∞", description="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã", required=False,
											  type=disnake.OptionType.integer)])
async def —Å—Ç–∞—Ç–∞(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞: int = 1):
	await inter.response.defer()
	emojis = {e.name: str(e) for e in gmdoguild.emojis}
	leaderboard = calc_lb()
	playersamount = len(leaderboard)
	pages = ceil(playersamount / 10)

	if —Å—Ç—Ä–∞–Ω–∏—Ü–∞ <= pages:
		victors = [key for key in leaderboard.keys()]
		embeds = list()
		for page in range(1, pages + 1):
			places = list()
			for i in range(10 * (page - 1) + 1,
						   (page * 10 if playersamount > 10 and (
								   playersamount - (page - 1) * 10) >= 10 else playersamount) + 1):
				passedlevels = get_passed_levels(victors[i - 1])
				places.append(
					f"**#{i}** **{victors[i - 1]}** ‚Äî {round(leaderboard[victors[i - 1]][0], 1)}{emojis['GD_STAR']} | {len(passedlevels)} {emojis['GD_DEMON']}")
			embed = disnake.Embed(title="–û—Ñ–∏—Ü–∞–ª—å–Ω—ã–π —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ü–æ–¥–ø–æ–ª—å—è", description="\n\n".join(places),
								  colour=0x766ce5)
			embed.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}/{pages}. (C) Official Podpol'e Demonlist")
			embeds.append(embed)

		await browse_pages(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞, pages, embeds)
	else:
		await inter.edit_original_message(content="–ù–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—â—ë –Ω–µ—Ç —É—Ä–æ–≤–Ω–µ–π ‚ùå")


@client.slash_command(name='—Ä—É–ª–µ—Ç–∫–∞',
					  description='–ù–∞—á–∏–Ω–∞–µ—Ç "—Ä—É–ª–µ—Ç–∫—É" –¥–µ–º–æ–Ω–æ–≤. –ü–∏—à–∏—Ç–µ /—Ö–µ–ª–ø —Ä—É–ª–µ—Ç–∫–∞ - —á—Ç–æ–±—ã –Ω–∞—É—á–∏—Ç—å—Å—è –∏–≥—Ä–∞—Ç—å.',
					  options=[disnake.Option('—Ä–µ–∫–æ—Ä–¥',
											  description="–ü–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–µ–∫–æ—Ä–¥. –î–ª—è —Å–±—Ä–æ—Å–∞ —Ä—É–ª–µ—Ç–∫–∏ '—Å–±—Ä–æ—Å', –ª–∏–±–æ '—Ç–µ–∫' –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ä–µ–∫–æ—Ä–¥–∞.",
											  required=False, type=disnake.OptionType.string)])
async def —Ä—É–ª–µ—Ç–∫–∞(inter, —Ä–µ–∫–æ—Ä–¥=None):
	await inter.response.defer()
	if —Ä–µ–∫–æ—Ä–¥ == None:
		—Ä–µ–∫–æ—Ä–¥ = 0
	if mmbrs.find_one({"discordtag": inter.author.id}) is None:
		mmbrs.insert_one({"discordtag": inter.author.id, "curpercent": 0, "roulettelvls": []})
	prevrecord = mmbrs.find_one({"discordtag": inter.author.id})["curpercent"]
	roulettelvls = [i for i in mmbrs.find_one({"discordtag": inter.author.id})["roulettelvls"]]
	if —Ä–µ–∫–æ—Ä–¥ == "—Å–±—Ä–æ—Å":
		if len(roulettelvls) == 0:
			await inter.edit_original_message(content="—á–æ —Ç–≤–æ—Ä–∏—à—å")
		else:
			await inter.edit_original_message(
				content=f"–í–∞—à–∞ –∏–≥—Ä–∞ –≤ —Ä—É–ª–µ—Ç–∫—É –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –Ω–∞ {prevrecord}%, —Å–ø—É—Å—Ç—è {translator.translate(f'{len(roulettelvls) - 1} progresses', dest='ru').text if len(roulettelvls) > 1 else '0 –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–≤ =)'}. –í—ã–∑–æ–≤–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–± –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!")
			mmbrs.update_one({"discordtag": inter.author.id}, {"$set": {"curpercent": 0, "roulettelvls": []}})
	elif —Ä–µ–∫–æ—Ä–¥ in ["—Ç–µ–∫—É—â–∏–π", "—Ç–µ–∫", "—É—Ä–æ–≤–µ–Ω—å", "–ª–≤–ª"]:
		embed = disnake.Embed(title="–¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å",
							  description=f"–£—Ä–æ–≤–µ–Ω—å #{len(roulettelvls)}: **{roulettelvls[-1]['name']}** by **{roulettelvls[-1]['author']}** (–¢–æ–ø {roulettelvls[-1]['position']} –≤ –ª–∏—Å—Ç–µ).\n–í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å **{prevrecord + 1}%**{' –∏–ª–∏ –±–æ–ª—å—à–µ.' if prevrecord != 99 else '.'}",
							  colour=0x8533d6)
		embed.set_footer(text="(C) Official Podpol'e Demonlist")
		await inter.edit_original_message(embed=embed)
	elif int(—Ä–µ–∫–æ—Ä–¥) > 100 or (int(—Ä–µ–∫–æ—Ä–¥) > 0 and len(roulettelvls) == 0):
		await inter.edit_original_message(content="—Ç—ã –∫–æ–º—É –ø–∏–∑–¥–∏—à –ø–∞–¥–ª–∞")
	elif int(—Ä–µ–∫–æ—Ä–¥) == 100:
		await inter.edit_original_message(
			content=f"–í—ã –ø—Ä–æ—à–ª–∏ —Ä—É–ª–µ—Ç–∫—É –¥–µ–º–æ–Ω–æ–≤! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –í—Å–µ–≥–æ –Ω–∞ –≤–∞—à–µ–º –ø—É—Ç–∏ –±—ã–ª{'–æ' if len(roulettelvls) > 1 else ''} {translator.translate(f'{len(roulettelvls)} levels', dest='ru').text if len(roulettelvls) > 0 else '0 —É—Ä–æ–≤–Ω–µ–π =)'}. –í—ã–∑–æ–≤–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –∫–æ–º–∞–Ω–¥—É —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É!")
		mmbrs.update_one({"discordtag": inter.author.id}, {"$set": {"curpercent": 0, "roulettelvls": []}})
	elif int(—Ä–µ–∫–æ—Ä–¥) <= prevrecord and (int(—Ä–µ–∫–æ—Ä–¥) != 0 or len(roulettelvls)):
		await inter.edit_original_message(
			content=f"–£–∫–∞–∑–∞–Ω–Ω—ã–π –≤–∞–º–∏ –ø—Ä–æ—Ü–µ–Ω—Ç –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–µ–Ω –≤–∞—à–µ–º—É –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —Ä–µ–∫–æ—Ä–¥—É –≤ {prevrecord}% ‚ùå")
	else:
		while True:
			lvl = random.choice([i for i in deml.find()])
			if lvl not in roulettelvls:
				break
		roulettelvls.append(lvl)
		mmbrs.update_one({"discordtag": inter.author.id},
						 {"$set": {"curpercent": int(—Ä–µ–∫–æ—Ä–¥), "roulettelvls": roulettelvls}})
		embed = disnake.Embed(title="–†—É–ª–µ—Ç–∫–∞ –ø–æ–¥–ø–æ–ª—å–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π",
							  description=f"–£—Ä–æ–≤–µ–Ω—å #{len(roulettelvls)}: **{lvl['name']}** by **{lvl['author']}** (–¢–æ–ø {lvl['position']} –≤ –ª–∏—Å—Ç–µ).\n–í–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å **{int(—Ä–µ–∫–æ—Ä–¥) + 1}%**{' –∏–ª–∏ –±–æ–ª—å—à–µ.' if int(—Ä–µ–∫–æ—Ä–¥) != 99 else '.'}",
							  colour=disnake.Colour.random())
		embed.set_footer(text="(C) Official Podpol'e Demonlist")
		await inter.edit_original_message(embed=embed)


@client.slash_command(name='–∞–Ω–µ–∫–¥–æ—Ç',
					  description='–í—ã–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç —Å —Å–∞–π—Ç–∞ anekdot.ru.')
async def –∞–Ω–µ–∫–¥–æ—Ç(inter):
	await inter.response.defer()
	parse = "https://www.anekdot.ru/random/anekdot"
	headers = {
		"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36 OPR/68.0.3618.206 (Edition Yx GX)"}

	page = requests.get(parse, headers=headers)
	soup = BeautifulSoup(page.content, "html.parser")
	anekdot = soup.find("div", "text").get_text("\n", strip=True)
	date = soup.find("p", "title").get_text("\n", strip=True)

	embed = disnake.Embed(description=anekdot, colour=disnake.Colour.random())
	embed.set_author(name="–°–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç", url=parse)
	embed.set_footer(text=f"–î–∞—Ç–∞: {date}. (C) Official Podpol'e Bot")

	await inter.edit_original_message(embed=embed)


@client.slash_command(name='—Ä–µ–¥–∏—Å',
					  description='–í—ã–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–¥–∏—Å –∏–∑ —Ç–µ—Ö –∂–µ Google –∫–∞—Ä—Ç–∏–Ω–æ–∫.')
async def —Ä–µ–¥–∏—Å(inter):
	await inter.response.defer()
	redis = randimg(random.choice(["—Å–º–µ—à–Ω–∞—è —Ä–µ–¥–∏—Å–∫–∞", "–∑–∞–±–∞–≤–Ω–∞—è —Ä–µ–¥–∏—Å–∫–∞", "—Ä–µ–¥–∏—Å–∫–∞", "—Ä–µ–¥–∏—Å–∫–∞", "–∫—Ä–∞—Å–Ω–∞—è —Ä–µ–¥–∏—Å–∫–∞"]))

	embed = disnake.Embed(title="–°–ª—É—á–∞–π–Ω—ã–π —Ä–µ–¥–∏—Å–Ω—ã–π", description=redis["title"], colour=disnake.Colour.random())
	embed.set_image(url=redis["link"])
	embed.set_footer(text=f"(C) Official Podpol'e Bot")

	await inter.edit_original_message(embed=embed)


@client.slash_command(name='–∏–º–≥',
					  description='–í—ã–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –∑–∞–ø—Ä–æ—Å—É –∏–∑ Google –∫–∞—Ä—Ç–∏–Ω–æ–∫.',
					  options=[disnake.Option('–∑–∞–ø—Ä–æ—Å', description="–ó–∞–ø—Ä–æ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É.",
											  required=True, type=disnake.OptionType.string)])
async def –∏–º–≥(inter, *, –∑–∞–ø—Ä–æ—Å):
	await inter.response.defer()
	redis = randimg(–∑–∞–ø—Ä–æ—Å)

	embed = disnake.Embed(title=f"–°–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É **{–∑–∞–ø—Ä–æ—Å}**", description=redis["title"],
						  colour=disnake.Colour.random())
	embed.set_image(url=redis["link"])
	embed.set_footer(text=f"(C) Official Podpol'e Bot")

	await inter.edit_original_message(embed=embed)


@client.slash_command(name='—Ö–µ–ª–ø',
					  description='–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞.',
					  options=[disnake.Option('—Å—Ç—Ä–∞–Ω–∏—Ü–∞',
											  description="–ù–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã. –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–º–æ—â–∏ –ø–æ —Ä—É–ª–µ—Ç–∫–µ, —É–∫–∞–∂–∏—Ç–µ –∑–¥–µ—Å—å '—Ä—É–ª–µ—Ç–∫–∞' (–±–µ–∑ –∫–∞–≤—ã—á–µ–∫).",
											  required=False, type=disnake.OptionType.string)])
async def —Ö–µ–ª–ø(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞=None):
	await inter.response.defer()
	if —Å—Ç—Ä–∞–Ω–∏—Ü–∞ in ["—Ä—É–ª–µ—Ç–∫–∞", "roulette", "r", "—Ä"]:
		embed1 = disnake.Embed(title='/—Ä—É–ª–µ—Ç–∫–∞ <—Ä–µ–∫–æ—Ä–¥/"—Å–±—Ä–æ—Å"/"—Ç–µ–∫">',
							   description='`1.` –î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Ä—É–ª–µ—Ç–∫—É, –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É `/—Ä—É–ª–µ—Ç–∫–∞`, –ø–æ—Å–ª–µ —á–µ–≥–æ –±–æ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç –≤–∞–º —É—Ä–æ–≤–µ–Ω—å, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –ø—Ä–æ–π—Ç–∏ –Ω–∞ 1% –∏–ª–∏ –±–æ–ª–µ–µ.\n`2.` –î–∞–ª–µ–µ –≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–æ–ø–∏—Å–∞—Ç—å `/—Ä—É–ª–µ—Ç–∫–∞ [–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–π –≤–∞–º–∏ —Ä–µ–∫–æ—Ä–¥]`, –∏, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º –≤—ã–ø–∞–≤—à–µ–º –¥–µ–º–æ–Ω–µ –≤—ã —É–∂–µ –¥–æ–ª–∂–Ω—ã –±—É–¥–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–∫–æ—Ä–¥ –±–æ–ª—å—à–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Ö–æ—Ç—è –±—ã –Ω–∞ 1%.\n`3.` –†–æ–≤–Ω–æ —Ç–∞–∫–æ–π –∂–µ –ø—Ä–∏–Ω—Ü–∏–ø –¥–µ–π—Å—Ç–≤—É–µ—Ç –∏ –¥–∞–ª–µ–µ, –ø–æ–∫–∞ –≤—ã –Ω–µ –¥–æ–π–¥–µ—Ç–µ –¥–æ –∑–Ω–∞—á–µ–Ω–∏—è 100.'
										   '\n\n**–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É - –Ω–∞–ø–∏—à–∏—Ç–µ `/—Ä—É–ª–µ—Ç–∫–∞ —Å–±—Ä–æ—Å`**\n**–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –≤–∞–º –Ω—É–∂–Ω–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–≥—Ä–µ—Å—Å - –Ω–∞–ø–∏—à–∏—Ç–µ `/—Ä—É–ª–µ—Ç–∫–∞ —Ç–µ–∫—É—â–∏–π`**',
							   colour=0xff4747)
		embed1.set_footer(text=f"(C) Official Podpol'e Bot")
		await inter.edit_original_message(embed=embed1)
	elif —Å—Ç—Ä–∞–Ω–∏—Ü–∞ in ["1", "2", None]:
		if —Å—Ç—Ä–∞–Ω–∏—Ü–∞ in ["1", "2"]:
			—Å—Ç—Ä–∞–Ω–∏—Ü–∞ = int(—Å—Ç—Ä–∞–Ω–∏—Ü–∞)
		else:
			—Å—Ç—Ä–∞–Ω–∏—Ü–∞ = 1
		embed1 = disnake.Embed(title="üìú –î–µ–º–æ–Ω–ª–∏—Å—Ç",
							   description="**P.s.:** [] - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, <> - –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
							   colour=0xff4747)
		embed1.set_author(name="–¢–µ–∫—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:")
		embed1.add_field(name="/–¥–ª <—Å—Ç—Ä–∞–Ω–∏—Ü–∞>",
						 value="```–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø 100 —Å–ª–æ–∂–Ω–µ–π—à–∏—Ö –¥–µ–º–æ–Ω–æ–≤, –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –≤ –ü–æ–¥–ø–æ–ª—å–µ.```",
						 inline=True)
		embed1.add_field(name="/—Å—Ç–∞—Ç–∞ <—Å—Ç—Ä–∞–Ω–∏—Ü–∞>",
						 value="```–ü–æ–∫–∞–∑—ã–≤–µ—Ç —Ç–æ–ø –∏–≥—Ä–æ–∫–æ–≤ –ü–æ–¥–ø–æ–ª—å—è –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ø–æ–∏–Ω—Ç–æ–≤ –∏–∑ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞.```",
						 inline=True)
		embed1.add_field(name="/–ª–µ–≥–∞—Å–∏ <—Å—Ç—Ä–∞–Ω–∏—Ü–∞>",
						 value="```–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —É—Ä–æ–≤–Ω–µ–π, –≤—ã–ª–µ—Ç–µ–≤—à–∏—Ö –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ç–æ–ø–∞ 100.```",
						 inline=True)
		embed1.add_field(name="/–ø—Ä–æ—Ñ–∏–ª—å <–Ω–∏–∫ –≤ –ª–∏—Å—Ç–µ/—Ç–µ–≥ –∏–≥—Ä–æ–∫–∞ –≤ –¥–∏—Å–∫–æ—Ä–¥–µ>",
						 value="```–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–µ –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–µ (–ø–æ–∑–∏—Ü–∏—é –≤ —Ç–æ–ø–µ, –≤—Å–µ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —É—Ä–æ–≤–Ω–∏, —Ö–∞—Ä–¥–µ—Å—Ç –¥–µ–º–æ–Ω –∏ —Ç.–¥.)```",
						 inline=True)
		embed1.add_field(name="/—É—Ä–æ–≤–µ–Ω—å [–ø–æ–∑–∏—Ü–∏—è –≤ –ª–∏—Å—Ç–µ/–Ω–∞–∑–≤–∞–Ω–∏–µ —É—Ä–æ–≤–Ω—è]",
						 value="```–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Ä–æ–≤–Ω–µ –∏–∑ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞ (–ø–æ–∑–∏—Ü–∏—é –≤ —Ç–æ–ø–µ, –∫–æ–ª-–≤–æ –ø–æ–∏–Ω—Ç–æ–≤ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏ —Ç.–¥.)```",
						 inline=True)
		embed1.add_field(name='/—Ä—É–ª–µ—Ç–∫–∞ <—Ä–µ–∫–æ—Ä–¥/"—Å–±—Ä–æ—Å"/"—Ç–µ–∫">',
						 value=f'```–ù–∞—á–∏–Ω–∞–µ—Ç —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º—É—é "—Ä—É–ª–µ—Ç–∫—É" –¥–µ–º–æ–Ω–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –≤ –ü–æ–¥–ø–æ–ª—å–µ. –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ –∏–≥—Ä–∞—Ç—å - –ø—Ä–æ–ø–∏—à–∏—Ç–µ \n/—Ö–µ–ª–ø —Ä—É–ª–µ—Ç–∫–∞.```',
						 inline=True)
		embed1.add_field(name='/–ø–∞–∫–∏ <—Å—Ç—Ä–∞–Ω–∏—Ü–∞>',
						 value=f'```–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–º–µ—é—â–∏—Ö—Å—è –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–∞–∫–æ–≤ —Å —É—Ä–æ–≤–Ω—è–º–∏ –∏–∑ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞.```',
						 inline=True)
		embed1.add_field(name='/–¥–ª–ø—Ä–∞–≤–∏–ª–∞',
						 value=f'```–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç.```',
						 inline=True)
		embed1.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ 1/2. (C) Official Podpol'e Bot")

		embed2 = disnake.Embed(title="üòú –ü—Ä–∏–∫–æ–ª—ã",
							   description="**P.s.:** [] - –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç, <> - –Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –∞—Ä–≥—É–º–µ–Ω—Ç",
							   colour=0xff4747)
		embed2.set_author(name="–¢–µ–∫—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:")
		embed2.add_field(name='/–∞–Ω–µ–∫–¥–æ—Ç',
						 value=f'```–í—ã–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç —Å —Å–∞–π—Ç–∞ anekdot.ru.```',
						 inline=True)
		embed2.add_field(name='/–∏–º–≥ [–∑–∞–ø—Ä–æ—Å]',
						 value=f'```–í—ã–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ –∑–∞–ø—Ä–æ—Å—É –∏–∑ Google –∫–∞—Ä—Ç–∏–Ω–æ–∫.```',
						 inline=True)
		embed2.add_field(name='/—Ä–µ–¥–∏—Å',
						 value=f'```–í—ã–¥–∞—ë—Ç —Å–ª—É—á–∞–π–Ω—ã–π —Ä–µ–¥–∏—Å –∏–∑ —Ç–µ—Ö –∂–µ Google –∫–∞—Ä—Ç–∏–Ω–æ–∫ (–¥–∞, –¥–ª—è —ç—Ç–æ–≥–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω—É–∂–Ω–∞ –æ—Ç–¥–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞).```',
						 inline=True)
		embed2.set_footer(text=f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ 2/2. (C) Official Podpol'e Bot")

		await browse_pages(inter, —Å—Ç—Ä–∞–Ω–∏—Ü–∞, 2, [embed1, embed2], False)
	else:
		await inter.edit_original_message(content="—á–æ —Ç–≤–æ—Ä–∏—à—å")


@client.slash_command(name='–¥–ª–ø—Ä–∞–≤–∏–ª–∞',
					  description='–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–∞–≤–∏–ª–∞ –¥–ª—è –ø–æ–ø–∞–¥–∞–Ω–∏—è –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç.', )
async def –¥–ª–ø—Ä–∞–≤–∏–ª–∞(inter):
	await inter.response.defer()
	embed = disnake.Embed(title="üìï –ü—Ä–∞–≤–∏–ª–∞ –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞ –ü–æ–¥–ø–æ–ª—å—è –ì–¥—à–µ—Ä–æ–≤", colour=0xff4747)
	embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 1.1",
					value="```–ò–Ω—Å–µ–π–Ω –¥–µ–º–æ–Ω—ã –∏ –ª–µ–≥—á–µ - –ø–æ –¥–æ–≤–µ—Ä–∏—é, –Ω–æ –ø—Ä—É—Ñ—ã –ª–∏—à–Ω–∏–º–∏ –Ω–µ –±—É–¥—É—Ç. –ù–∞ —ç–∫—Å—Ç—Ä–∏–º –¥–µ–º–æ–Ω—ã - –≤–∏–¥–µ–æ —Å –∫–ª–∏–∫–∞–º–∏. –ù–æ –µ—Å–ª–∏ –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –∑–∞–ø–∏—Å–∞—Ç—å –≤–∞—à–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ, —Ç–æ –≤—Å—ë —Ä–∞–≤–Ω–æ –º–æ–∂–µ—Ç–µ –ø–æ–ø–∞—Å—Ç—å –≤ –ª–∏—Å—Ç, –µ—Å–ª–∏ –≤—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–π —É—á–∞—Å—Ç–Ω–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞ –∏–ª–∏ –∏–º–µ–µ—Ç–µ –∑–∞–ø–∏—Å—å —Å 55%+ .```",
					inline=False)
	embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 1.2",
					value="```–ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–æ—Ä –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞ –∑–∞–ø–æ–¥–æ–∑—Ä–∏–ª —á—Ç–æ-–ª–∏–±–æ –Ω–µ–ª–∞–¥–Ω–æ–µ –≤ –ø—Ä—É—Ñ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è - –æ–Ω –≤ –ø—Ä–∞–≤–µ –≤–∞—Å –¥–æ–ø—Ä–æ—Å–∏—Ç—å, –∏ –≤ —Å–ª—É—á–∞–µ —á–µ–≥–æ —É–±—Ä–∞—Ç—å –≤–∞—à–∏ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Å –¥–µ–º–æ–Ω–ª–∏—Å—Ç–∞.```",
					inline=True)
	embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 1.3",
					value="```–ï—Å–ª–∏ –≤—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ —Ä–∞–∑–ª–∏—á–Ω–æ–≥–æ —Ä–æ–¥–∞ —Å–∏–∫—Ä–µ—Ç –≤–µ–∏ –∏ –¥—Ä—É–≥–∏–µ –Ω–µ—á–µ—Å—Ç–Ω—ã–µ –ø—É—Ç–∏ –∑–∞–ø–æ–ª—É—á–∏—Ç—å –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–æ –≤ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ —É—Ä–æ–≤–Ω–µ - –≤–∞—à–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –Ω–µ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –¥–µ–º–æ–Ω–ª–∏—Å—Ç.```",
					inline=True)
	embed.add_field(name="–ü—Ä–∞–≤–∏–ª–æ 1.4",
					value="```–í –¥–µ–º–æ–Ω–ª–∏—Å—Ç –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ø–∞—Å—Ç—å —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ 10+ —É—Ä–æ–≤–Ω—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.```", inline=True)
	embed.set_footer(text=f"(C) Official Podpol'e Demonlist")
	await inter.edit_original_message(embed=embed)


client.run(token)
